{"version":3,"sources":["components/Note.jsx","components/AddNotes.jsx","components/NotesList.jsx","components/Search.jsx","components/Header.jsx","App.js","index.js"],"names":["Note","_ref","id","text","date","handleDeleteNote","react_default","a","createElement","className","index_esm","onClick","size","AddNote","handleAddNote","_useState","useState","_useState2","Object","slicedToArray","noteText","setNoteText","cols","rows","value","placeholder","onChange","event","target","length","trim","NotesList","notes","map","note","components_Note","key","AddNotes","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","App","nanoid","setNotes","_useState3","_useState4","searchText","setSearchText","_useState5","_useState6","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","console","log","setItem","stringify","concat","components_Header","components_Search","components_NotesList","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","toConsumableArray","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.068b67b2.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { MdDeleteForever } from 'react-icons/md'\n\nconst Note = ({ id, text, date, handleDeleteNote }) => {\n    return(\n        <div className=\"note\">\n            <span>{text}</span>\n\n            <div className=\"note-footer\">\n                <small>{date}</small>\n\n                <MdDeleteForever \n                    onClick={() => handleDeleteNote(id)}\n                    className='delete-icon' \n                    size='1.3em' \n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Note;","import React, { useState } from \"react\";\n\nconst AddNote = ({handleAddNote}) => {\n\n    const [noteText, setNoteText] = useState('');\n    const characterLimit = 200;\n\n    const handleChange = (event) => {\n        if(characterLimit - event.target.value.length >= 0){\n            setNoteText(event.target.value)\n        }\n    };\n\n    const handleSaveClick = () => {\n        if(noteText.trim().length > 0){\n            handleAddNote(noteText);\n            setNoteText('');\n        }\n    }\n\n    return(\n        <div className=\"note new\">\n            <textarea \n                cols=\"10\" \n                rows=\"8\" \n                value={noteText}\n                placeholder=\"Type to add a note...\"\n                onChange={handleChange}\n            ></textarea>\n\n            <div className=\"note-footer\">\n                 <small>{characterLimit - noteText.length} Remaining</small>\n                 <button className=\"save\" onClick={handleSaveClick}>Save</button>\n            </div>\n        </div>\n    )\n};\n\nexport default AddNote;","import React from \"react\";\n\nimport Note from \"./Note\";\nimport AddNote from \"./AddNotes\";\n\nconst NotesList = ({notes, handleAddNote, handleDeleteNote}) => {\n    return(\n        <div className=\"notes-list\">\n            {notes.map((note) => (\n                <Note key={note.id}\n                    id={note.id} \n                    text={note.text} \n                    date={note.date}\n                    handleDeleteNote={handleDeleteNote}\n                />\n            ))}\n\n            <AddNote handleAddNote={handleAddNote}/>\n        </div>\n    );\n};\n\nexport default NotesList;\n","import React from \"react\";\nimport { MdSearch } from \"react-icons/md\";\n\nconst Search = ({ handleSearchNote }) => {\n    return(\n        <div className=\"search\">\n            <MdSearch className=\"search-icon\" size='1.3em' />\n\n            <input \n                onChange={(event) => handleSearchNote(event.target.value)} \n                type=\"text\" \n                placeholder=\"type to search...\" \n            />\n        </div>\n    )\n};\n\nexport default Search;","import React from \"react\";\n\nconst Header = ({ handleToggleDarkMode }) => {\n    return(\n        <div className=\"header\">\n            <h1>Notes</h1>\n            <button \n                onClick={() => \n                    handleToggleDarkMode(\n                        (previousDarkMode) => !previousDarkMode \n                    )} \n                className=\"save\"\n            >Toggle Mode</button>\n        </div>\n    )\n};\n\nexport default Header;","import React, { useState, useEffect } from \"react\";\nimport {nanoid} from 'nanoid';\n\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n\n  const [notes, setNotes] = useState([\n    \n    {\n      id: nanoid(),\n      text: \"This is the first note\",\n      date: '15/05/1020',\n    },\n    {\n      id: nanoid(),\n      text: \"This is the second note\",\n      date: '05/05/1020',\n    },\n    {\n      id: nanoid(),\n      text: \"This is the third note\",\n      date: '25/05/1020',\n    },\n    {\n      id: nanoid(),\n      text: \"This is the last note\",\n      date: '30/05/1020',\n    },\n]);\nconst [searchText, setSearchText] = useState('');\nconst [darkMode, setDarkMode] = useState(false);\n\n\n//retrieve data from loacal-storage\nuseEffect(() => {\n  const savedNotes = JSON.parse(\n    localStorage.getItem('react-notes-app-data')\n  );\n\n  if(savedNotes){\n    setNotes(savedNotes);\n    console.log('done')\n  }\n\n},[]);\n\n//store notes in local-storage\nuseEffect(() => {\n  localStorage.setItem(\n    'react-notes-app-data',\n    JSON.stringify(notes)\n    )\n    console.log('saved')\n},[notes])\n\nconst addNote = (text) => {\n  const date = new Date();\n  const newNote = {\n    id: nanoid(),\n    text: text,\n    date: date.toLocaleDateString()\n  }\n\n  const newNotes = [...notes, newNote];\n\n  setNotes(newNotes);\n};\n\nconst deleteNote = (id) => {\n  const newNotes = notes.filter((note) => note.id !== id);\n  setNotes(newNotes);\n};\n\n\n\n  return(\n    <div className={`${darkMode && 'dark-mode'}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode}/>\n        <Search handleSearchNote={setSearchText} />\n        <NotesList \n          notes={notes.filter((note) => \n                  note.text.toLowerCase().includes(searchText)\n                )} \n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote}\n          />\n      </div>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}